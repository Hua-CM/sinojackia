# -*- coding: utf-8 -*-
# @Time : 2021/9/28 1:27
# @Author : Zhongyi Hua
# @FileName: index.py
# @Usage: 
# @Note:
# @E-mail: njbxhzy@hotmail.com
import os


class PPIndex:
    def __init__(self, ainone):
        """
        :param ainone: Generated by utils.GenConfig._pp_index()
        """
        self.ainone = ainone
        self.ref = ainone.get('ref')
        if self.ainone.get('task') == 'RNA':
            self.gff = os.path.join(ainone['outdir'], os.path.split(ainone['config']['resources']['gff'])[1])
            self.prefix = os.path.split(ainone['config']['resources']['reference'])[1].split('.')[0]

    def copy_file(self):
        try:
            os.symlink(self.ainone['config']['resources']['reference'], self.ref)
            if self.ainone['config']['resources'].get('gff'):  # gff was not needed for WGS
                os.symlink(self.ainone['config']['resources']['gff'], self.gff)
        except FileExistsError:
            pass

    def _write_cmds(self, cmds):
        with open(self.ainone['outsh'], 'a') as f_out:
            f_out.write(cmds+'\n')

    def _pp_star_index(self):
        _index_cmd = (f"{self.ainone['config']['align']['bin']} "
                      f"--runThreadN {self.ainone['config']['align']['threads']} "
                      f"--runMode genomeGenerate --sjdbGTFtagExonParentTranscript Parent "
                      f"--genomeDir {self.ainone['outdir']} "
                      f"--genomeFastaFiles {self.ref} "
                      f"--sjdbGTFfile {self.gff}")
        self._write_cmds(_index_cmd)

    def _pp_hisat_index(self):
        _bin = os.path.join(self.ainone['config']['align']['bin'], "hisat2-build")
        _index_cmd = f"{_bin} {self.ref} {self.prefix}"
        self._write_cmds(_index_cmd)

    def _pp_rsem_index(self):
        _bin = os.path.join(self.ainone['config']['quantify']['bin'], "rsem-prepare-reference")
        _index_cmd = f"{_bin} --gff3 {self.gff} {self.ref} {self.ref}"
        self._write_cmds(_index_cmd)

    def _pp_bwa_index(self):
        _bin = self.ainone['config']['align']['bwa']
        _index_cmd = f"{_bin} index {self.ref}"
        self._write_cmds(_index_cmd)

    def _pp_gatk_index(self):
        _bin = self.ainone['config']['variant']['bin']
        _index_cmd = f'{_bin} --java-options "-Xmx10G" CreateSequenceDictionary -R {self.ref}'
        _index_cmd += f"\nsamtools faidx {self.ref}"
        self._write_cmds(_index_cmd)

    def pp_index(self):
        if self.ainone.get('task') == 'RNA':
            if 'align' in self.ainone.get('units'):
                _software = self.ainone['config']['align']['software']
                if _software == 'hisat2':
                    self._pp_hisat_index()
                if _software == 'STAR':
                    self._pp_star_index()
            if 'quantify' in self.ainone.get('units'):
                _software = self.ainone['config']['quantify']['software']
                if _software == 'RSEM':
                    self._pp_rsem_index()
                if _software == 'featureCounts':
                    pass  # featureCounts does not need index file
        else:
            self._pp_bwa_index()
            self._pp_gatk_index()
